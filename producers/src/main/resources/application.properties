server.address=${SERVER_ADDRESS:0.0.0.0}
server.port=${PRODUCER_SERVER_PORT:8888}

# Logging
logging.file.name=${PRODUCER_LOG_FILE_NAME:logSmsGw/producers.log}
logging.logback.rollingpolicy.max-file-size=${PRODUCER_LOG_MAX_FILE_SIZE:10MB}
logging.level.root=${PRODUCER_LOG_LEVEL:INFO}
logging.level.com.zaxxer.hikari.HikariConfig=${LOG_LEVEL_HIKARI_CONFIG:DEBUG}
logging.level.com.zaxxer.hikari=${LOG_LEVEL_HIKARI:DEBUG}

# DB Connection
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:none}
spring.jpa.hibernate.show-sql=${HIBERNATE_SHOW_SQL:true}
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/sms_gateway}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:postgres}
# Connection pool
spring.datasource.type=${DATASOURCE_TYPE:com.zaxxer.hikari.HikariDataSource}
spring.datasource.hikari.maximum-pool-size=${DATASOURCE_MAX_POOL_SIZE:1}
spring.datasource.hikari.connection-timeout=${DATASOURCE_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DATASOURCE_IDLE_TIMEOUT:20000}
spring.datasource.hikari.max-lifetime=${DATASOURCE_MAX_LIFETIME:2000000}
spring.datasource.hikari.minimum-idle=${DATASOURCE_MINIMUM_IDLE:1}

# SMPP Server
smppServer.port=${SMSC_PORT:2777}
smppServer.systemId=${SMSC_SYSTEM_ID:123456789}
smppServer.maxConnection=${SMSC_MAX_CONNECTION:50}
smppServer.corePoolSize=${SMSC_CORE_POOL_SIZE:1000}
smppServer.defaultRequestExpiryTimeout=${SMSC_DEFAULT_REQUEST_EXPIRY_TIMEOUT:30000}
smppServer.defaultWindowMonitorInterval=${SMSC_DEFAULT_WINDOW_MONITOR_INTERVAL:15000}
smppServer.defaultWindowSize=${SMSC_DEFAULT_WINDOW_SIZE:500}
smppServer.nonBlockingSocketsEnabled=${SMSC_NON_BLOCKING_SOCKETS_ENABLED:true}
smppServer.defaultSessionCountersEnabled=${SMSC_DEFAULT_SESSION_COUNTERS_ENABLED:true}
smppServer.jmxEnabled=${SMSC_JMX_ENABLED:true}

# RabbitMQ
spring.rabbitmq.password=${RABBIT_MQ_USERNAME:guest}
spring.rabbitmq.username=${RABBIT_MQ_PASSWORD:guest}
spring.rabbitmq.port=${RABBIT_MQ_PORT:5672}
spring.rabbitmq.host=${RABBIT_MQ_HOST:localhost}
spring.rabbitmq.listener.type=simple
spring.rabbitmq.listener.simple.concurrency=${RABBIT_MQ_CONCURRENCY_LISTENER:500}
spring.rabbitmq.listener.simple.prefetch=${RABBIT_MQ_PREFETCH_COUNT:500}
# Queues
mbf.submitSm.queueName1=${MBF_SUBMIT_SM_QUEUE_NAME1:mbfSubmitSmQueue1}
mbf.submitSm.queueName2=${MBF_SUBMIT_SM_QUEUE_NAME2:mbfSubmitSmQueue2}
mbf.submitSm.queueName3=${MBF_SUBMIT_SM_QUEUE_NAME3:mbfSubmitSmQueue3}
mbf.submitSm.queueName4=${MBF_SUBMIT_SM_QUEUE_NAME4:mbfSubmitSmQueue4}
mbf.submitSm.queueName5=${MBF_SUBMIT_SM_QUEUE_NAME5:mbfSubmitSmQueue5}
mbf.submitSmResp.queueName=${MBF_SUBMIT_SM_RESP_QUEUE_NAME:mbfSubmitSmRespQueue}
mbf.exchange=${MBF_EXCHANGE:mbfExchange}
mbf.deliverSm.queueName=${MBF_DELIVER_SM_QUEUE_NAME:mbfDeliverSmQueue}
mbf.dataService.queueName=${MBF_DATASERVICE_QUEUE_NAME:mbfDataServiceQueue}
mbf.masterDataProducer.queueName=${MBF_MASTERDATA_PRODUCER_QUEUE_NAME:mbfMasterDataProducerQueue}

# Cron
mbf.cron.time=${MBF_CRON_TIME:60000}
mbf.cron.initDelay=${MBF_CRON_TIME:10000}

# Validate
validate.template.allow=${VALIDATE_TEMPLATE_ALLOW:true}
