server.address=${SERVER_ADDRESS:0.0.0.0}
server.port=${CONSUMER_SERVER_PORT:8887}

# Logging
logging.file.name=${CONSUMER_LOG_FILE_NAME:logSmsGw/consumers.log}
logging.logback.rollingpolicy.max-file-size=${CONSUMER_LOG_MAX_FILE_SIZE:10MB}
logging.level.root=${CONSUMER_LOG_LEVEL:INFO}
logging.level.com.zaxxer.hikari.HikariConfig=${LOG_LEVEL_HIKARI_CONFIG:DEBUG}
logging.level.com.zaxxer.hikari=${LOG_LEVEL_HIKARI:DEBUG}

# DB Connection
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:none}
spring.jpa.hibernate.show-sql=${HIBERNATE_SHOW_SQL:true}
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/sms_gateway}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:postgres}
# Connection pool
spring.datasource.type=${DATASOURCE_TYPE:com.zaxxer.hikari.HikariDataSource}
spring.datasource.hikari.maximum-pool-size=${DATASOURCE_MAX_POOL_SIZE:1}
spring.datasource.hikari.connection-timeout=${DATASOURCE_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DATASOURCE_IDLE_TIMEOUT:20000}
spring.datasource.hikari.max-lifetime=${DATASOURCE_MAX_LIFETIME:2000000}
spring.datasource.hikari.minimum-idle=${DATASOURCE_MINIMUM_IDLE:1}

# SMPP Client
smpp.client.host=${SMPP_CLIENT_HOST:127.0.0.1}
smpp.client.port=${SMPP_CLIENT_PORT:2778}
smpp.client.connect.timeout=${SMPP_CLIENT_CONNECT_TIMEOUT:10000}
smpp.client.systemId=${SMPP_CLIENT_SYSTEM_ID:123456789}
smpp.client.password=${SMPP_CLIENT_PASSWORD:password}
smpp.client.request.expiryTimeout=${SMPP_CLIENT_REQUEST_EXPIRY_TIMEOUT:30000}
smpp.client.window.monitorInterval=${SMPP_CLIENT_WINDOW_MONITOR_INTERVAL:15000}
smpp.client.window.size=${SMPP_CLIENT_WINDOW_SIZE:50}
smpp.client.name=${SMPP_CLIENT_NAME:SMPP.Client.Session.0}
smpp.client.address.range.tone=${SMPP_CLIENT_ADDRESS_RANGE_TON:0x01}
smpp.client.address.range.npi=${SMPP_CLIENT_ADDRESS_RANGE_NPI:0x01}
smpp.client.address.range.address=${SMPP_CLIENT_ADDRESS_RANGE_ADDRESS:null}
smpp.client.serverTimeout=${SMPP_CLIENT_SERVER_TIMEOUT:30000}
smpp.client.message.maxRetryTimes=${SMPP_CLIENT_MESSAGE_MAX_RETRY_TIMES:3}
smpp.client.message.requeueWaitTime=${SMPP_CLIENT_MESSAGE_REQUEUE_WAIT_TIME:5000}
smpp.client.deplayBeforeStart=${SMPP_CLIENT_DELAY_BEFORE_START:5000}

# RabbitMQ
spring.rabbitmq.password=${RABBIT_MQ_USERNAME:guest}
spring.rabbitmq.username=${RABBIT_MQ_PASSWORD:guest}
spring.rabbitmq.port=${RABBIT_MQ_PORT:5672}
spring.rabbitmq.host=${RABBIT_MQ_HOST:localhost}
spring.rabbitmq.listener.type=simple
spring.rabbitmq.listener.simple.concurrency=${RABBIT_MQ_CONCURRENCY_LISTENER:100}
spring.rabbitmq.listener.simple.prefetch=${RABBIT_MQ_PREFETCH_COUNT:100}
# Queues
mbf.submitSm.queueName=${MBF_SUBMIT_SM_QUEUE_NAME:mbfSubmitSmQueue}
mbf.submitSmResp.queueName=${MBF_SUBMIT_SM_RESP_QUEUE_NAME:mbfSubmitSmRespQueue}
mbf.submitSmWeb.queueName=${MBF_SUBMIT_SM_WEB_QUEUE_NAME:mbfSubmitSmWebQueue}
mbf.exchange=${MBF_EXCHANGE:mbfExchange}
mbf.deliverSm.queueName=${MBF_DELIVER_SM_QUEUE_NAME:mbfDeliverSmQueue}
mbf.dataService.queueName=${MBF_DATASERVICE_QUEUE_NAME:mbfDataServiceQueue}
mbf.masterDataProducer.queueName=${MBF_MASTERDATA_PRODUCER_QUEUE_NAME:mbfMasterDataProducerQueue}

# Cron
mbf.cron.time=${MBF_CRON_TIME:60000}
mbf.cron.initDelay=${MBF_CRON_TIME:10000}